[tool.poetry]
name = "tvl"
version = "0.9.0"
description = "TROPIC Verification Library"
authors = ["hlhote <henri.lhote@tropicsquare.com>"]
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
typing-extensions = "^4.8.0"
crcmod = "^1.7"
cryptography = "^41.0.7"
pycryptodome = "^3.19.0"
pyyaml = "^6.0.1"
pydantic = "^1.10.0"
jinja2 = "^3.1.4"
pycln = "^2.4.0"
isort = "^5.13.2"
pyserial = "^3.5"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-randomly = "^3.15.0"
pre-commit = "^3.5.0"
black = "^23.11.0"

[tool.poetry.scripts]
api_generator = 'tvl.api_generator.api_generator:main'
co_generator = 'tvl.configuration_object_generator.co_generator:main'
model_server = 'tvl.server.server:main'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pycln]
all = true
paths = ["tests", "tvl"]
extend_exclude = "(tvl/api/l2_api.py|tvl/api/l3_api.py|tvl/targets/model/configuration_object_impl.py)"

[tool.isort]
profile = "black"
extend_skip = [
    "tvl/api/l2_api.py",
    "tvl/api/l3_api.py",
    "tvl/targets/model/configuration_object_impl.py",
]

[tool.black]
target-version = ['py38']
extend-exclude = '''
(
    ^/tvl/api/l2_api.py
    | ^/tvl/api/l3_api.py
    | ^/tvl/targets/model/configuration_object_impl.py
)
'''

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = "tests"
markers = [
    "slow: this test takes quite some time to complete",
]
log_cli = true
log_cli_level = "WARNING"
log_cli_format = "%(levelname)s [%(module)s] %(message)s"
addopts = """
--cov=tvl
--cov-branch
--cov-report=term
"""

[tool.coverage.run]
omit = [
    "*/__init__.py",
    "tvl/api/l2_api.py",
    "tvl/api/l3_api.py",
    "tvl/targets/model/configuration_object_impl.py",
    "tvl/api_generator/*",
    "tvl/configuration_object_generator/*",
    "tvl/server/*",
]

[tool.coverage.report]
exclude_lines = [
    'coverage: no',
    'if __name__ == "__main__":',
    'def main\(\):',
    'def __str__\(self\)',
    'def __repr__\(self\)',
    '@(abc.)?abstractmethod',
    'raise NotImplementedError',
    'class .*\bProtocol\):',
    '@(typing.)?overload',
    'if TYPE_CHECKING:',
    '@(functools.)?singledispatch(method)?'
]
